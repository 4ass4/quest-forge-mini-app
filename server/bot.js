const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
const cors = require('cors');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ .env
const BOT_TOKEN = '6441651041:AAF1m6AAIwjIXGuZkaaBUl8Uca9nf0lzbis';
const PORT = 3000;
const WEBAPP_URL = 'https://4ass4.github.io/quest-forge-mini-app/';

// –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ Express —Å–µ—Ä–≤–µ—Ä
const bot = new TelegramBot(BOT_TOKEN, { polling: true });
const app = express();

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS
app.use(cors({
  origin: [
    'https://4ass4.github.io',
    'http://localhost:5173',
    'http://localhost:3000'
  ],
  credentials: true
}));

app.use(express.json());

// ======================
// TELEGRAM BOT HANDLERS
// ======================

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.onText(/\/start/, async (msg) => {
  const chatId = msg.chat.id;
  const firstName = msg.from.first_name || '–î—Ä—É–≥';

  const welcomeText = `üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Quest Forge, ${firstName}!</b>

üöÄ <b>–ù–æ–≤–æ–µ –ø–æ–∫–æ–ª–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–æ–≤!</b>
–¢–µ–ø–µ—Ä—å —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º Mini App –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º!

‚ú® <b>–ß—Ç–æ –≤–∞—Å –∂–¥–µ—Ç:</b>
‚Ä¢ üéÆ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ AI-–∫–≤–µ—Å—Ç—ã
‚Ä¢ üí∞ –ó–∞—Ä–∞–±–æ—Ç–æ–∫ QUC —Ç–æ–∫–µ–Ω–æ–≤
‚Ä¢ üèÜ –†–µ–π—Ç–∏–Ω–≥–∏ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
‚Ä¢ üõí –ú–∞–≥–∞–∑–∏–Ω —É–ª—É—á—à–µ–Ω–∏–π
‚Ä¢ üì± –ö—Ä–∞—Å–∏–≤—ã–π –º–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å

üëÜ <b>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –∑–∞–ø—É—Å–∫–∞!</b>`;

  const keyboard = {
    inline_keyboard: [
      [
        {
          text: 'üöÄ –ò–≥—Ä–∞—Ç—å –≤ Quest Forge',
          web_app: { url: WEBAPP_URL }
        }
      ],
      [
        { text: '‚ùì –ü–æ–º–æ—â—å', callback_data: 'help' },
        { text: 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data: 'stats' }
      ]
    ]
  };

  await bot.sendMessage(chatId, welcomeText, {
    parse_mode: 'HTML',
    reply_markup: keyboard
  });
});

// –ö–æ–º–∞–Ω–¥–∞ /play - –ø—Ä—è–º–æ–π –∑–∞–ø—É—Å–∫ Mini App
bot.onText(/\/play/, async (msg) => {
  const chatId = msg.chat.id;
  
  await bot.sendMessage(chatId, 
    'üéÆ <b>–ó–∞–ø—É—Å–∫ Quest Forge!</b>\n\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã:', 
    {
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [[
          {
            text: 'üöÄ –ò–≥—Ä–∞—Ç—å',
            web_app: { url: WEBAPP_URL }
          }
        ]]
      }
    }
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∫–Ω–æ–ø–æ–∫
bot.on('callback_query', async (query) => {
  const chatId = query.message.chat.id;
  const data = query.data;

  if (data === 'help') {
    await bot.sendMessage(chatId, 
      '‚ùì <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ Quest Forge</b>\n\n' +
      'üéÆ <b>–ö–∞–∫ –∏–≥—Ä–∞—Ç—å:</b>\n' +
      '‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "üöÄ –ò–≥—Ä–∞—Ç—å" –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Mini App\n' +
      '‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –∫–≤–µ—Å—Ç –∏ –Ω–∞—á–Ω–∏—Ç–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ\n' +
      '‚Ä¢ –û—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ QUC\n' +
      '‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏\n\n' +
      'üí∞ <b>QUC —Ç–æ–∫–µ–Ω—ã:</b>\n' +
      '‚Ä¢ –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–æ–≤\n' +
      '‚Ä¢ –¢—Ä–∞—Ç—å—Ç–µ –≤ –º–∞–≥–∞–∑–∏–Ω–µ –Ω–∞ —É–ª—É—á—à–µ–Ω–∏—è\n' +
      '‚Ä¢ –í—ã–≤–æ–¥–∏—Ç–µ –Ω–∞ TON –∫–æ—à–µ–ª–µ–∫\n\n' +
      'üèÜ <b>–†–µ–π—Ç–∏–Ω–≥:</b>\n' +
      '‚Ä¢ –°–æ—Ä–µ–≤–Ω—É–π—Ç–µ—Å—å —Å –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏\n' +
      '‚Ä¢ –ü–æ–¥–Ω–∏–º–∞–π—Ç–µ—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ –ª–∏–¥–µ—Ä–æ–≤',
      { parse_mode: 'HTML' }
    );
  }

  if (data === 'stats') {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    await bot.sendMessage(chatId,
      'üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Quest Forge</b>\n\n' +
      'üë• –ê–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤: <b>1,247</b>\n' +
      'üéÆ –ö–≤–µ—Å—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–æ: <b>89</b>\n' +
      'üí∞ QUC –≤ –æ–±—Ä–∞—â–µ–Ω–∏–∏: <b>125,340</b>\n' +
      'üèÜ –ò–≥—Ä –∑–∞–≤–µ—Ä—à–µ–Ω–æ: <b>3,892</b>\n\n' +
      'üöÄ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –∏–≥—Ä–µ!',
      { parse_mode: 'HTML' }
    );
  }

  await bot.answerCallbackQuery(query.id);
});

// ======================
// API ENDPOINTS –¥–ª—è Mini App
// ======================

// –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
app.get('/api/user', (req, res) => {
  const telegramUserId = req.headers['x-telegram-user-id'];
  const telegramUserData = req.headers['x-telegram-user-data'];
  
  // –ú–æ–∫ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  res.json({
    id: telegramUserId || 123456789,
    name: '–¢–µ—Å—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
    username: 'testuser',
    balance: 1250,
    completedQuests: 12,
    createdQuests: 3,
    rank: 127,
    achievements: ['üéÆ –ò–≥—Ä–æ–∫', 'üé® –ö–≤–µ—Å—Ç–æ–¥–µ–ª', 'üèÖ –í–µ—Ç–µ—Ä–∞–Ω']
  });
});

// –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–≤–µ—Å—Ç–æ–≤
app.get('/api/quests', (req, res) => {
  const quests = [
    {
      id: 1,
      title: "–¢–∞–π–Ω—ã –∫–æ—Å–º–æ—Å–∞",
      description: "–£–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –≥–∞–ª–∞–∫—Ç–∏–∫–µ",
      difficulty: "–õ–µ–≥–∫–∏–π",
      rating: 4.8,
      plays: 1247,
      reward: 50,
      estimatedTime: 10,
      steps: [
        {
          id: 1,
          question: "–ö–∞–∫–∞—è –ø–ª–∞–Ω–µ—Ç–∞ —è–≤–ª—è–µ—Ç—Å—è —Å–∞–º–æ–π –±–æ–ª—å—à–æ–π –≤ –Ω–∞—à–µ–π –°–æ–ª–Ω–µ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ?",
          answer: "—é–ø–∏—Ç–µ—Ä",
          hint: "–≠—Ç–∞ –ø–ª–∞–Ω–µ—Ç–∞ –Ω–∞–∑–≤–∞–Ω–∞ –≤ —á–µ—Å—Ç—å —Ä–∏–º—Å–∫–æ–≥–æ –±–æ–≥–∞"
        }
      ]
    },
    {
      id: 2,
      title: "–ó–∞–≥–∞–¥–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏",
      description: "–†–∞—Å–∫—Ä–æ–π—Ç–µ —Å–µ–∫—Ä–µ—Ç—ã –¥—Ä–µ–≤–Ω–∏—Ö —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏–π",
      difficulty: "–°—Ä–µ–¥–Ω–∏–π",
      rating: 4.6,
      plays: 892,
      reward: 75,
      estimatedTime: 15
    },
    {
      id: 3,
      title: "–ú–∏—Ä –Ω–∞—É–∫–∏",
      description: "–ó–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–µ –Ω–∞—É—á–Ω—ã–µ –æ—Ç–∫—Ä—ã—Ç–∏—è",
      difficulty: "–°–ª–æ–∂–Ω—ã–π",
      rating: 4.9,
      plays: 543,
      reward: 100,
      estimatedTime: 20
    }
  ];
  
  res.json(quests);
});

// –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫–≤–µ—Å—Ç
app.get('/api/quests/:id', (req, res) => {
  const questId = parseInt(req.params.id);
  
  // –ú–æ–∫ –¥–∞–Ω–Ω—ã–µ –∫–≤–µ—Å—Ç–∞
  const quest = {
    id: questId,
    title: "–¢–∞–π–Ω—ã –∫–æ—Å–º–æ—Å–∞",
    description: "–£–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –≥–∞–ª–∞–∫—Ç–∏–∫–µ",
    difficulty: "–õ–µ–≥–∫–∏–π",
    estimatedTime: 10,
    reward: 50,
    steps: [
      {
        id: 1,
        question: "–ö–∞–∫–∞—è –ø–ª–∞–Ω–µ—Ç–∞ —è–≤–ª—è–µ—Ç—Å—è —Å–∞–º–æ–π –±–æ–ª—å—à–æ–π –≤ –Ω–∞—à–µ–π –°–æ–ª–Ω–µ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ?",
        answer: "—é–ø–∏—Ç–µ—Ä",
        hint: "–≠—Ç–∞ –ø–ª–∞–Ω–µ—Ç–∞ –Ω–∞–∑–≤–∞–Ω–∞ –≤ —á–µ—Å—Ç—å —Ä–∏–º—Å–∫–æ–≥–æ –±–æ–≥–∞ –∏ –∏–º–µ–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Å–ø—É—Ç–Ω–∏–∫–æ–≤",
        image: "ü™ê"
      },
      {
        id: 2,
        question: "–°–∫–æ–ª—å–∫–æ –ø–ª–∞–Ω–µ—Ç –≤ –Ω–∞—à–µ–π –°–æ–ª–Ω–µ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ?",
        answer: "8",
        hint: "–ü–ª—É—Ç–æ–Ω –±–æ–ª—å—à–µ –Ω–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø–ª–∞–Ω–µ—Ç–æ–π —Å 2006 –≥–æ–¥–∞"
      },
      {
        id: 3,
        question: "–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –±–ª–∏–∂–∞–π—à–∞—è –∫ –Ω–∞–º –∑–≤–µ–∑–¥–∞?",
        answer: "—Å–æ–ª–Ω—Ü–µ",
        hint: "–ú—ã –≤–∏–¥–∏–º –µ—ë –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –Ω–∞ –Ω–µ–±–µ"
      }
    ]
  };
  
  res.json(quest);
});

// –ü—Ä–µ–¥–º–µ—Ç—ã –º–∞–≥–∞–∑–∏–Ω–∞
app.get('/api/shop/items', (req, res) => {
  const items = [
    {
      id: 'hint_1',
      name: '–ü–æ–¥—Å–∫–∞–∑–∫–∞',
      description: '–ü–æ–ª—É—á–∏—Ç–µ –ø–æ–¥—Å–∫–∞–∑–∫—É –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞',
      price: 50,
      icon: 'üí°',
      category: 'hints'
    },
    {
      id: 'skip_1',
      name: '–ü—Ä–æ–ø—É—Å–∫',
      description: '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å–ª–æ–∂–Ω—ã–π –≤–æ–ø—Ä–æ—Å',
      price: 75,
      icon: '‚è≠Ô∏è',
      category: 'skips'
    },
    {
      id: 'boost_2x',
      name: '–£–¥–≤–æ–∏—Ç–µ–ª—å –Ω–∞–≥—Ä–∞–¥—ã',
      description: '–£–¥–≤–∞–∏–≤–∞–µ—Ç –Ω–∞–≥—Ä–∞–¥—É –∑–∞ –∫–≤–µ—Å—Ç –Ω–∞ 1 —á–∞—Å',
      price: 300,
      icon: '‚ö°',
      category: 'boosters'
    }
  ];
  
  res.json(items);
});

// –õ–∏–¥–µ—Ä–±–æ—Ä–¥—ã
app.get('/api/leaderboard/players', (req, res) => {
  const players = [
    { id: 1, name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä', username: 'alex_quest', score: 15420, completedQuests: 89, rank: 1 },
    { id: 2, name: '–ú–∞—Ä–∏—è', username: 'maria_gamer', score: 14230, completedQuests: 76, rank: 2 },
    { id: 3, name: '–î–º–∏—Ç—Ä–∏–π', username: 'dmitry_pro', score: 13150, completedQuests: 71, rank: 3 },
    { id: 4, name: '–ê–Ω–Ω–∞', username: 'anna_quest', score: 12890, completedQuests: 68, rank: 4 },
    { id: 5, name: '–°–µ—Ä–≥–µ–π', username: 'sergey_top', score: 12340, completedQuests: 65, rank: 5 }
  ];
  
  res.json(players);
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
  console.log('üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É', PORT);
  console.log('ü§ñ –ë–æ—Ç Quest Forge –∞–∫—Ç–∏–≤–µ–Ω!');
  console.log('üåê Mini App:', WEBAPP_URL);
  console.log('üîó API –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:' + PORT + '/api/');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.on('polling_error', (error) => {
  console.log('‚ùå –û—à–∏–±–∫–∞ polling:', error);
});

process.on('unhandledRejection', (reason, promise) => {
  console.log('‚ùå Unhandled Rejection:', reason);
});
